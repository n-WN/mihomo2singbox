[project]
name = "mihomo2singbox"
version = "0.1.0"
description = "Mihomo (ClashMeta) 配置转换为 Sing-box 配置的转换工具"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.11"
authors = [
    {name = "mihomo2singbox", authors = "n-WN"}
]
keywords = ["mihomo", "clash", "sing-box", "proxy", "converter"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: Proxy Servers",
    "Topic :: System :: Networking",
    "Topic :: Utilities",
]
dependencies = [
    "pyyaml>=6.0.2",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.5.0",
    "pytest>=8.0.0",
    "pytest-cov>=5.0.0",
]

[project.scripts]
mihomo2singbox = "mihomo2singbox.main:main"

[project.urls]
Homepage = "https://github.com/n-WN/mihomo2singbox"
Repository = "https://github.com/n-WN/mihomo2singbox"
Issues = "https://github.com/n-WN/mihomo2singbox/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["mihomo2singbox"]

[tool.uv]
# 设置项目为可安装包
package = true

[tool.ruff]
line-length = 88
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["mihomo2singbox"]
omit = [
    "tests/*",
    "setup.py",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
